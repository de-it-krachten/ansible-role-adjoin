---

- name: Install all required packages
  yum:
    name: "{{ sssd_packages }}"
  vars:
    sssd_packages:
    - sssd
    - realmd
    - oddjob
    - oddjob-mkhomedir
    - adcli
    - samba-common
    #- samba-common-tools
    - krb5-workstation
    #- openldap-clients
    #- policycoreutils-python

#- name: Start sssd
#  systemd:
#     name: sssd
#     state: started
#     enabled: yes

- name: Start & enable oddjob
  service:
    name: oddjobd
    state: started
    enabled: yes

- name: Configure kerberos (krb5)
  template:
    src: krb5.conf.j2
    dest: /etc/krb5.conf
    owner: root
    group: root
    mode: '0644'
    backup: yes

- name: Obtain kerberos ticket
  shell: |
    if klist -s
    then
      exit 0
    else
      echo -n "{{ ad_password }}" | \ 
      kinit {{ ad_user }}@{{ ad_realm | upper }} && exit 1 || exit 2
    fi
  register: _kinit
  changed_when: _kinit.rc == 1
  failed_when: _kinit.rc > 1

- name: Configure pam
  lineinfile:
    path: /etc/pam.d/system-auth
    line: 'session     optional      pam_oddjob_mkhomedir.so umask=0077'
    insertafter: '^-session\s+optional\s+pam_systemd.so$'
    backup: yes

- name: Leave AD realm
  shell: |
    sssd_backup=/etc/sssd/sssd.conf.{{ ansible_date_time['iso8601_basic_short'] }}.1
    realm leave {{ ad_realm }}
    test -f /etc/sssd/sssd.conf && mv -f /etc/sssd/sssd.conf ${sssd_backup}
    exit 0
  when: ad_leave|bool

- name: Get sssd configuration
  command: cat /etc/sssd/sssd.conf
  changed_when: no
  failed_when: no
  check_mode: no
  register: realm_check

#- name: Enroll into AD if not enrolled yet
#  shell: |
#    exec > /tmp/adcli.log 2>&1
#    echo "{{ ad_password }}" | adcli join -v \
#      --verbose {{ '--use-ldaps' if ad_tls|bool }} \
#      --domain={{ ad_realm }} \
#      --domain-controller={{ ad_servers | first }} \
#      --domain-realm={{ ad_realm | upper }} \
#      --computer-name={{ inventory_hostname }} \
#      --host-fqdn={{ inventory_hostname }} \
#      --login-user={{ ad_user }} \
#      --stdin-password
#  when: realm_check.stdout is not search('domains='+ad_realm)

#- name: Enroll into AD if not enrolled yet
#  shell: |
#    exec > /tmp/realm.log 2>&1
#    realm join -v \
#      --user-principal=nfs/{{ inventory_hostname }}@{{ ad_realm | upper }} {{ ad_realm }}
#  when: realm_check.stdout is not search('domains='+ad_realm)

- name: Enroll into AD if not enrolled yet
  shell: |
    exec > /tmp/realm.log 2>&1
    realm join -v {{ ad_realm }}
  when: realm_check.stdout is not search('domains='+ad_realm)

- name: Add new SPN
  shell: |
    if klist -k | grep -q "nfs/{{ inventory_hostname }}.{{ ad_realm }}"
    then
      exit 0
    else
      exec > /tmp/adcli.log 2>&1
      adcli update -C --add-service-principal nfs/{{ inventory_hostname }}.{{ ad_realm }} -v && exit 1 || exit 2
    fi
  register: _adcli
  changed_when: _adcli.rc == 1
  failed_when: _adcli.rc > 1

- name: Configure sssd
  template:
    src: sssd.conf.j2
    dest: /etc/sssd/sssd.conf
    owner: root
    group: root
    mode: '0600'
    backup: yes
  notify: Restart sssd


#- name: Add AD server to inventory
#  add_host:
#    hostname: "{{ ad_server }}"
#    ansible_host: "{{ ad_server }}"
#    ansible_user: "{{ ad_user }}"
#    ansible_password: "{{ ad_password }}"
#    ansible_connection: winrm
#    ansible_winrm_scheme: http
#    ansible_port: 5985
#  changed_when: false

#- name: Check for NFS service principal with AD
#  win_shell: |
#    setspn -L {{ inventory_hostname }}
#  changed_when: false
#  check_mode: no
#  become: false
#  register: _setspn
#  delegate_to: "{{ ad_server }}"

#- name: Register NFS service principal with AD
#  win_shell: |
#    setspn -S nfs/{{ inventory_hostname }}.{{ ad_realm }} {{ inventory_hostname }}
#  become: false
#  when: _setspn is not search('nfs/'+inventory_hostname)
#  delegate_to: "{{ ad_server }}"
#- name: Enroll into AD if not enrolled yet
#  shell: |
#    exec > /tmp/realm.log 2>&1
#    realm join -v \
#      --user-principal=nfs/{{ inventory_hostname }}@{{ ad_realm | upper }} {{ ad_realm }}
#  when: realm_check.stdout is not search('domains='+ad_realm)

- name: Configure sssd
  template:
    src: sssd.conf.j2
    dest: /etc/sssd/sssd.conf
    owner: root
    group: root
    mode: '0600'
    backup: yes
  notify: Restart sssd


#- name: Add AD server to inventory
#  add_host:
#    hostname: "{{ ad_server }}"
#    ansible_host: "{{ ad_server }}"
#    ansible_user: "{{ ad_user }}"
#    ansible_password: "{{ ad_password }}"
#    ansible_connection: winrm
#    ansible_winrm_scheme: http
#    ansible_port: 5985
#  changed_when: false

#- name: Check for NFS service principal with AD
#  win_shell: |
#    setspn -L {{ inventory_hostname }}
#  changed_when: false
#  check_mode: no
#  become: false
#  register: _setspn
#  delegate_to: "{{ ad_server }}"

#- name: Register NFS service principal with AD
#  win_shell: |
#    setspn -S nfs/{{ inventory_hostname }}.{{ ad_realm }} {{ inventory_hostname }}
#  become: false
#  when: _setspn is not search('nfs/'+inventory_hostname)
#  delegate_to: "{{ ad_server }}"
